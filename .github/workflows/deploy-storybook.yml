name: Deploy storybook

on:
  # Pull request hook without any config. Launches for every pull request
  pull_request:
  # Launches build when release is published
  release:
    types: [published]

env:
  REPO_NAME_ALPHANUMERIC: safereactcomponents

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      
      - uses: actions/checkout@v2

      - name: Node.js setup
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Env dependencies setup
        run: |
          sudo apt-get update
          sudo apt-get -y install python3-pip python3-dev
          pip install awscli --upgrade --user

      - name: Yarn install
        run: |
          mkdir .yarncache
          yarn install --cache-folder ./.yarncache --frozen-lockfile
          rm -rf .yarncache
          yarn cache clean

      - name: Build storybook
        run: yarn build-storybook

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Script to deploy Pull Requests
      - run: bash ./scripts/github/deploy_pull_request.sh
        if: success() && github.event.number
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          PR_NUMBER: ${{ github.event.number }}
          REVIEW_BUCKET_NAME: ${{ secrets.AWS_REVIEW_BUCKET_NAME }}

      - name: 'PRaul: Comment PR with app URLs'
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            :books: [Storybook review](${{ env.REVIEW_FEATURE_URL }})
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
        if: success() && github.event.number
        env:
          REVIEW_FEATURE_URL: https://pr${{ github.event.number }}--safereactcomponents.review.gnosisdev.com

      # Script to upload release files
      - name: 'Upload release build files for production'
        if: startsWith(github.ref, 'refs/tags/v')
        run: aws s3 sync storybook-static s3://${{ secrets.STAGING_BUCKET_NAME }}/releases/${{ github.event.release.tag_name }}/website --delete

      # Script to prepare production deployments
      - run: bash ./scripts/github/prepare_production_deployment.sh
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          PROD_DEPLOYMENT_HOOK_TOKEN: ${{ secrets.PROD_DEPLOYMENT_HOOK_TOKEN }}
          PROD_DEPLOYMENT_HOOK_URL: ${{ secrets.PROD_DEPLOYMENT_HOOK_URL }}
          VERSION_TAG: ${{ github.event.release.tag_name }}
